<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>12</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Generators\BasicGenerator\BasicGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\Generators\FileTransformGenerator\FileTransformGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />

    <!-- Known issue: Referencing projects from source generators is cursed.
      Just include a reference here to make life easy when you are working within one solution.
      Don't bother referencing outside packages unless you enjoy pain.
      https://github.com/dotnet/roslyn/discussions/47517 -->
    <ProjectReference Include="..\CsharpBuilder\CsharpBuilder.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!-- The following MSBuild logic is for viewing generated files.
    Normally you wouldn't want to check these files in, but they are checked-in
    here to make the code easier to understand. -->
  <PropertyGroup>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>gen</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>

  <!-- Exclude previously emitted files from the build. The compiler only uses
    the in-memory generated code, but since we are leaving the files on the disk
    we need to exclude them from the build so as to not have duplicate code.
    Known issue: files aren't cleaned before re-generating. -->
  <ItemGroup>
    <Compile Remove="$(CompilerGeneratedFilesOutputPath)\**" />
  </ItemGroup>
</Project>
